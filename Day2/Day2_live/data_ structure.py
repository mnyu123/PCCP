# 파이썬 큐

from collections import deque

# a = list()
# a.append(3)

# print("리스트 추가", a)

# q = deque()

# q.append(1)
# print("큐 삽입1", q)
# q.appendleft(2)
# print("큐 삽입2", q)
# q.pop()
# print("큐 삭제1", q)
# q.popleft()
# print("큐 삭제2", q)



# 깊이 우선 탐색(DFS)
# 스택으로 구현한다면
# 1. 시작점을 stack에 추가함
# 2. 스택의 가장 끝에 저장된 점을 바라?본다?
# 3-1. 그 점에서 갈 수 있는 곳을 지정해서 stack에
# append(추가란 말임) & 방문했다고 처리함
# 3-2. 갈 수 있는 곳이 없으면 stack에서 pop
# 4-1. 2~3번 반복
# 4-2. 언제가지? 스택이 전부 비어있을 때까지

# 너비 우선 탐색(BFS)
# 큐로 구현한다면
# 1. 시작점을 큐에 추가
# 2. 큐에 가장 첫번째 저장된 점을 봄
# 3. 그 점에서 갈 수 있는 "모든 점"을 큐에 추가 , 그리고 방문처리
# 4. 첫번째 저장된 점을 pop
# 5. 2~4번 반복 큐가 빌때까지